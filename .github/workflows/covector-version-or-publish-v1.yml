# Copyright 2019-2024 Tauri Programme within The Commons Conservancy
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: covector version or publish

on:
  push:
    branches:
      - 1.x

jobs:
  msrv-list:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - {
              target: x86_64-pc-windows-msvc,
              os: windows-latest,
              toolchain: '1.61.0'
            }
          - {
              target: x86_64-unknown-linux-gnu,
              os: ubuntu-latest,
              toolchain: '1.60.0'
            }
          - {
              target: x86_64-apple-darwin,
              os: macos-latest,
              toolchain: '1.60.0'
            }
    steps:
      - uses: actions/checkout@v4

      - name: install rust ${{ matrix.platform.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.platform.toolchain }}
          target: ${{ matrix.platform.target }}
          override: true
          default: true

      - name: install Linux dependencies
        if: contains(matrix.platform.target, 'unknown-linux')
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libayatana-appindicator3-dev

      - uses: Swatinem/rust-cache@v2

      - name: delete lockfile
        run: rm Cargo.lock

      - name: Downgrade crates with MSRV conflict
        # The --precise flag can only be used once per invocation.
        run: |
          cargo update -p system-deps:6.2.0 --precise 6.1.1
          cargo update -p toml:0.7.8 --precise 0.7.3
          cargo update -p toml_edit:0.19.15 --precise 0.19.8
          cargo update -p embed-resource --precise 2.3.0
          cargo update -p toml_datetime --precise 0.6.1
          cargo update -p serde_spanned --precise 0.6.1
          cargo update -p winnow --precise 0.4.1
          cargo update -p plist --precise 1.5.1
          cargo update -p time --precise 0.3.15
          cargo update -p ignore --precise 0.4.18
          cargo update -p raw-window-handle --precise 0.5.0
          cargo update -p cargo_toml:0.15.3 --precise 0.15.2
          cargo update -p zbus --precise 3.13.0
          cargo update -p zbus_names --precise 2.5.0
          cargo update -p colored --precise 2.0.2
          cargo update -p arboard --precise 3.2.1
          cargo update -p tempfile --precise 3.6.0
          cargo update -p serde_with:3.6.1 --precise 3.0.0
          cargo update -p tokio --precise 1.29.0
          cargo update -p flate2 --precise 1.0.26
          cargo update -p h2 --precise 0.3.20
          cargo update -p reqwest --precise 0.11.18
          cargo update -p bstr --precise 1.6.2
          cargo update -p cfg-expr:0.15.7 --precise 0.15.4
          cargo update -p memchr --precise 2.6.2
          cargo update -p async-executor --precise 1.5.1
          cargo update -p proptest --precise 1.2.0
          cargo update -p regex --precise 1.9.6
          cargo update -p bstr --precise 1.6.2
          cargo update -p backtrace --precise 0.3.68
          cargo update -p blocking --precise 1.4.1
          cargo update -p ignore --precise 0.4.18
          cargo update -p regex --precise 1.9.6
          cargo update -p globset --precise 0.4.13
          cargo update -p crossbeam-channel --precise 0.5.8
          cargo update -p crossbeam-utils --precise 0.8.16
          cargo update -p image --precise 0.24.4
          cargo update -p async-process --precise 1.7.0
          cargo update -p is-terminal --precise 0.4.7
          cargo update -p tar --precise 0.4.39
          cargo update -p serde_json --precise 1.0.97
          cargo update -p petgraph --precise 0.6.3
          cargo update -p os_str_bytes --precise 6.5.1

      - name: test build
        run: cargo check --target ${{ matrix.platform.target }} --features tracing,compression,wry,linux-protocol-headers,isolation,custom-protocol,api-all,cli,updater,system-tray,windows7-compat,http-multipart,test

  run-integration-tests:
    runs-on: ${{ matrix.platform }}
    needs: msrv-list

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libayatana-appindicator3-dev libfuse2

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            core -> ../target
            tooling/cli

      - name: build CLI
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path ./tooling/cli/Cargo.toml

      - name: run integration tests
        run: cargo test --test '*' -- --ignored

      - name: run CLI tests
        timeout-minutes: 30
        run: |
          cd ./tooling/cli/node
          yarn
          yarn build
          yarn test

  version-or-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 65
    outputs:
      change: ${{ steps.covector.outputs.change }}
      commandRan: ${{ steps.covector.outputs.commandRan }}
      successfulPublish: ${{ steps.covector.outputs.successfulPublish }}
    needs:
      - run-integration-tests

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
          cache: yarn
          cache-dependency-path: tooling/*/yarn.lock

      - name: cargo login
        run: cargo login ${{ secrets.ORG_CRATES_IO_TOKEN }}
      - name: git config
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"

      - name: covector version or publish (publish when no change files present)
        uses: jbolda/covector/packages/action@covector-v0
        id: covector
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ORG_NPM_TOKEN }}
          CARGO_AUDIT_OPTIONS: ${{ secrets.CARGO_AUDIT_OPTIONS }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: 'version-or-publish'
          createRelease: true

      - name: Create Pull Request With Versions Bumped
        if: steps.covector.outputs.commandRan == 'version'
        uses: tauri-apps/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release/version-updates-v1
          title: Apply Version Updates From Current Changes (v1)
          commit-message: 'apply version updates'
          labels: 'version updates'
          body: ${{ steps.covector.outputs.change }}

      - name: Trigger doc update
        if: |
          steps.covector.outputs.successfulPublish == 'true' &&
          steps.covector.outputs.packagesPublished != ''
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ORG_TAURI_BOT_PAT }}
          repository: tauri-apps/tauri-docs
          event-type: update-docs

      - name: Trigger `@tauri-apps/cli` publishing workflow
        if: |
          steps.covector.outputs.successfulPublish == 'true' &&
          contains(steps.covector.outputs.packagesPublished, '@tauri-apps/cli')
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ORG_TAURI_BOT_PAT }}
          event-type: publish-js-cli
          client-payload: >-
            {"releaseId": "${{ steps.covector.outputs['-tauri-apps-cli-releaseId'] }}" }

      - name: Trigger `tauri-cli` publishing workflow
        if: |
          steps.covector.outputs.successfulPublish == 'true' &&
          contains(steps.covector.outputs.packagesPublished, 'tauri-cli')
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ORG_TAURI_BOT_PAT }}
          event-type: publish-clirs
